pipeline {
    agent any

    environment {
        AZURE_CREDENTIALS_ID = 'azure-service-principal'
        RESOURCE_GROUP = 'react-rg'
        APP_SERVICE_NAME = 'webapijenkins45413'
        TERRAFORM_PATH = '"C:\\Users\\Samriddh\\Downloads\\terraform_1.11.3_windows_386\\terraform.exe"'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/samriddhagarwal07/reactterraform.git'
            }
        }

        stage('Terraform Init') {
            steps {
                bat '%TERRAFORM_PATH% -chdir=terraform init'
            }
        }

        stage('Terraform Import Existing Resources') {
            steps {
                bat '''
                    C:\\Users\\Samriddh\\Downloads\\terraform_1.11.3_windows_386\\terraform.exe -chdir=terraform import azurerm_resource_group.rg "/subscriptions/4a6f3be4-14cd-451b-97b0-d315131d91cd/resourceGroups/react-rg"
                '''
            }
        }

        stage('Terraform Plan & Apply') {
            steps {
                bat '%TERRAFORM_PATH% -chdir=terraform plan -out=tfplan'
                bat '%TERRAFORM_PATH% -chdir=terraform apply -auto-approve tfplan'
            }
        }

        stage('Build React App') {
            steps {
                bat 'npm install'
                bat 'npm run build'
            }
        }

        stage('Deploy to Azure') {
            steps {
                withCredentials([azureServicePrincipal(credentialsId: AZURE_CREDENTIALS_ID)]) {
                    bat '''
                        az login --service-principal -u %AZURE_CLIENT_ID% -p %AZURE_CLIENT_SECRET% --tenant %AZURE_TENANT_ID%
                        powershell Compress-Archive -Path build\\* -DestinationPath build.zip -Force
                        az webapp deploy --resource-group %RESOURCE_GROUP% --name %APP_SERVICE_NAME% --src-path build.zip --type zip
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment Successful!'
        }
        failure {
            echo '❌ Deployment Failed!'
        }
    }
}
